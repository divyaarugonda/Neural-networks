{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dd96fa6b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:56:08.232821Z",
     "start_time": "2022-12-07T12:55:56.250325Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Activation,Layer,Lambda\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.decomposition import PCA\n",
    "from mlxtend.plotting import plot_decision_regions\n",
    "from keras.models import Sequential\n",
    "from keras.callbacks import History \n",
    "history = History()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a3077245",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:56:26.879345Z",
     "start_time": "2022-12-07T12:56:26.844220Z"
    }
   },
   "outputs": [],
   "source": [
    "forest=pd.read_csv(\"forestfires (1).csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "612108d3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:56:33.920231Z",
     "start_time": "2022-12-07T12:56:33.861184Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>temp</th>\n",
       "      <th>RH</th>\n",
       "      <th>wind</th>\n",
       "      <th>rain</th>\n",
       "      <th>...</th>\n",
       "      <th>monthfeb</th>\n",
       "      <th>monthjan</th>\n",
       "      <th>monthjul</th>\n",
       "      <th>monthjun</th>\n",
       "      <th>monthmar</th>\n",
       "      <th>monthmay</th>\n",
       "      <th>monthnov</th>\n",
       "      <th>monthoct</th>\n",
       "      <th>monthsep</th>\n",
       "      <th>size_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mar</td>\n",
       "      <td>fri</td>\n",
       "      <td>86.2</td>\n",
       "      <td>26.2</td>\n",
       "      <td>94.3</td>\n",
       "      <td>5.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>51</td>\n",
       "      <td>6.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>oct</td>\n",
       "      <td>tue</td>\n",
       "      <td>90.6</td>\n",
       "      <td>35.4</td>\n",
       "      <td>669.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>18.0</td>\n",
       "      <td>33</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>oct</td>\n",
       "      <td>sat</td>\n",
       "      <td>90.6</td>\n",
       "      <td>43.7</td>\n",
       "      <td>686.9</td>\n",
       "      <td>6.7</td>\n",
       "      <td>14.6</td>\n",
       "      <td>33</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mar</td>\n",
       "      <td>fri</td>\n",
       "      <td>91.7</td>\n",
       "      <td>33.3</td>\n",
       "      <td>77.5</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>97</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>mar</td>\n",
       "      <td>sun</td>\n",
       "      <td>89.3</td>\n",
       "      <td>51.3</td>\n",
       "      <td>102.2</td>\n",
       "      <td>9.6</td>\n",
       "      <td>11.4</td>\n",
       "      <td>99</td>\n",
       "      <td>1.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>27.8</td>\n",
       "      <td>32</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>large</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>513</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>21.9</td>\n",
       "      <td>71</td>\n",
       "      <td>5.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>large</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>514</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>21.2</td>\n",
       "      <td>70</td>\n",
       "      <td>6.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>large</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>515</th>\n",
       "      <td>aug</td>\n",
       "      <td>sat</td>\n",
       "      <td>94.4</td>\n",
       "      <td>146.0</td>\n",
       "      <td>614.7</td>\n",
       "      <td>11.3</td>\n",
       "      <td>25.6</td>\n",
       "      <td>42</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516</th>\n",
       "      <td>nov</td>\n",
       "      <td>tue</td>\n",
       "      <td>79.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>106.7</td>\n",
       "      <td>1.1</td>\n",
       "      <td>11.8</td>\n",
       "      <td>31</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>small</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>517 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    month  day  FFMC    DMC     DC   ISI  temp  RH  wind  rain  ...  monthfeb  \\\n",
       "0     mar  fri  86.2   26.2   94.3   5.1   8.2  51   6.7   0.0  ...         0   \n",
       "1     oct  tue  90.6   35.4  669.1   6.7  18.0  33   0.9   0.0  ...         0   \n",
       "2     oct  sat  90.6   43.7  686.9   6.7  14.6  33   1.3   0.0  ...         0   \n",
       "3     mar  fri  91.7   33.3   77.5   9.0   8.3  97   4.0   0.2  ...         0   \n",
       "4     mar  sun  89.3   51.3  102.2   9.6  11.4  99   1.8   0.0  ...         0   \n",
       "..    ...  ...   ...    ...    ...   ...   ...  ..   ...   ...  ...       ...   \n",
       "512   aug  sun  81.6   56.7  665.6   1.9  27.8  32   2.7   0.0  ...         0   \n",
       "513   aug  sun  81.6   56.7  665.6   1.9  21.9  71   5.8   0.0  ...         0   \n",
       "514   aug  sun  81.6   56.7  665.6   1.9  21.2  70   6.7   0.0  ...         0   \n",
       "515   aug  sat  94.4  146.0  614.7  11.3  25.6  42   4.0   0.0  ...         0   \n",
       "516   nov  tue  79.5    3.0  106.7   1.1  11.8  31   4.5   0.0  ...         0   \n",
       "\n",
       "     monthjan  monthjul  monthjun  monthmar  monthmay  monthnov  monthoct  \\\n",
       "0           0         0         0         1         0         0         0   \n",
       "1           0         0         0         0         0         0         1   \n",
       "2           0         0         0         0         0         0         1   \n",
       "3           0         0         0         1         0         0         0   \n",
       "4           0         0         0         1         0         0         0   \n",
       "..        ...       ...       ...       ...       ...       ...       ...   \n",
       "512         0         0         0         0         0         0         0   \n",
       "513         0         0         0         0         0         0         0   \n",
       "514         0         0         0         0         0         0         0   \n",
       "515         0         0         0         0         0         0         0   \n",
       "516         0         0         0         0         0         1         0   \n",
       "\n",
       "     monthsep  size_category  \n",
       "0           0          small  \n",
       "1           0          small  \n",
       "2           0          small  \n",
       "3           0          small  \n",
       "4           0          small  \n",
       "..        ...            ...  \n",
       "512         0          large  \n",
       "513         0          large  \n",
       "514         0          large  \n",
       "515         0          small  \n",
       "516         0          small  \n",
       "\n",
       "[517 rows x 31 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "fca16c12",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:57:04.258132Z",
     "start_time": "2022-12-07T12:57:04.242511Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "month            0\n",
       "day              0\n",
       "FFMC             0\n",
       "DMC              0\n",
       "DC               0\n",
       "ISI              0\n",
       "temp             0\n",
       "RH               0\n",
       "wind             0\n",
       "rain             0\n",
       "area             0\n",
       "dayfri           0\n",
       "daymon           0\n",
       "daysat           0\n",
       "daysun           0\n",
       "daythu           0\n",
       "daytue           0\n",
       "daywed           0\n",
       "monthapr         0\n",
       "monthaug         0\n",
       "monthdec         0\n",
       "monthfeb         0\n",
       "monthjan         0\n",
       "monthjul         0\n",
       "monthjun         0\n",
       "monthmar         0\n",
       "monthmay         0\n",
       "monthnov         0\n",
       "monthoct         0\n",
       "monthsep         0\n",
       "size_category    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0d4bca7d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:57:18.971419Z",
     "start_time": "2022-12-07T12:57:18.941312Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 517 entries, 0 to 516\n",
      "Data columns (total 31 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   month          517 non-null    object \n",
      " 1   day            517 non-null    object \n",
      " 2   FFMC           517 non-null    float64\n",
      " 3   DMC            517 non-null    float64\n",
      " 4   DC             517 non-null    float64\n",
      " 5   ISI            517 non-null    float64\n",
      " 6   temp           517 non-null    float64\n",
      " 7   RH             517 non-null    int64  \n",
      " 8   wind           517 non-null    float64\n",
      " 9   rain           517 non-null    float64\n",
      " 10  area           517 non-null    float64\n",
      " 11  dayfri         517 non-null    int64  \n",
      " 12  daymon         517 non-null    int64  \n",
      " 13  daysat         517 non-null    int64  \n",
      " 14  daysun         517 non-null    int64  \n",
      " 15  daythu         517 non-null    int64  \n",
      " 16  daytue         517 non-null    int64  \n",
      " 17  daywed         517 non-null    int64  \n",
      " 18  monthapr       517 non-null    int64  \n",
      " 19  monthaug       517 non-null    int64  \n",
      " 20  monthdec       517 non-null    int64  \n",
      " 21  monthfeb       517 non-null    int64  \n",
      " 22  monthjan       517 non-null    int64  \n",
      " 23  monthjul       517 non-null    int64  \n",
      " 24  monthjun       517 non-null    int64  \n",
      " 25  monthmar       517 non-null    int64  \n",
      " 26  monthmay       517 non-null    int64  \n",
      " 27  monthnov       517 non-null    int64  \n",
      " 28  monthoct       517 non-null    int64  \n",
      " 29  monthsep       517 non-null    int64  \n",
      " 30  size_category  517 non-null    object \n",
      "dtypes: float64(8), int64(20), object(3)\n",
      "memory usage: 125.3+ KB\n"
     ]
    }
   ],
   "source": [
    "forest.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d4dfb0d4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:57:50.408531Z",
     "start_time": "2022-12-07T12:57:50.396463Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "small    378\n",
       "large    139\n",
       "Name: size_category, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest['size_category'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8723f766",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:58:11.016534Z",
     "start_time": "2022-12-07T12:58:10.901274Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>temp</th>\n",
       "      <th>RH</th>\n",
       "      <th>wind</th>\n",
       "      <th>rain</th>\n",
       "      <th>area</th>\n",
       "      <th>dayfri</th>\n",
       "      <th>...</th>\n",
       "      <th>monthdec</th>\n",
       "      <th>monthfeb</th>\n",
       "      <th>monthjan</th>\n",
       "      <th>monthjul</th>\n",
       "      <th>monthjun</th>\n",
       "      <th>monthmar</th>\n",
       "      <th>monthmay</th>\n",
       "      <th>monthnov</th>\n",
       "      <th>monthoct</th>\n",
       "      <th>monthsep</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "      <td>517.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>90.644681</td>\n",
       "      <td>110.872340</td>\n",
       "      <td>547.940039</td>\n",
       "      <td>9.021663</td>\n",
       "      <td>18.889168</td>\n",
       "      <td>44.288201</td>\n",
       "      <td>4.017602</td>\n",
       "      <td>0.021663</td>\n",
       "      <td>12.847292</td>\n",
       "      <td>0.164410</td>\n",
       "      <td>...</td>\n",
       "      <td>0.017408</td>\n",
       "      <td>0.038685</td>\n",
       "      <td>0.003868</td>\n",
       "      <td>0.061896</td>\n",
       "      <td>0.032882</td>\n",
       "      <td>0.104449</td>\n",
       "      <td>0.003868</td>\n",
       "      <td>0.001934</td>\n",
       "      <td>0.029014</td>\n",
       "      <td>0.332689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>5.520111</td>\n",
       "      <td>64.046482</td>\n",
       "      <td>248.066192</td>\n",
       "      <td>4.559477</td>\n",
       "      <td>5.806625</td>\n",
       "      <td>16.317469</td>\n",
       "      <td>1.791653</td>\n",
       "      <td>0.295959</td>\n",
       "      <td>63.655818</td>\n",
       "      <td>0.371006</td>\n",
       "      <td>...</td>\n",
       "      <td>0.130913</td>\n",
       "      <td>0.193029</td>\n",
       "      <td>0.062137</td>\n",
       "      <td>0.241199</td>\n",
       "      <td>0.178500</td>\n",
       "      <td>0.306138</td>\n",
       "      <td>0.062137</td>\n",
       "      <td>0.043980</td>\n",
       "      <td>0.168007</td>\n",
       "      <td>0.471632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.700000</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>7.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>0.400000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>90.200000</td>\n",
       "      <td>68.600000</td>\n",
       "      <td>437.700000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>15.500000</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>2.700000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>91.600000</td>\n",
       "      <td>108.300000</td>\n",
       "      <td>664.200000</td>\n",
       "      <td>8.400000</td>\n",
       "      <td>19.300000</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.520000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>92.900000</td>\n",
       "      <td>142.400000</td>\n",
       "      <td>713.900000</td>\n",
       "      <td>10.800000</td>\n",
       "      <td>22.800000</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>4.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.570000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>96.200000</td>\n",
       "      <td>291.300000</td>\n",
       "      <td>860.600000</td>\n",
       "      <td>56.100000</td>\n",
       "      <td>33.300000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>9.400000</td>\n",
       "      <td>6.400000</td>\n",
       "      <td>1090.840000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             FFMC         DMC          DC         ISI        temp          RH  \\\n",
       "count  517.000000  517.000000  517.000000  517.000000  517.000000  517.000000   \n",
       "mean    90.644681  110.872340  547.940039    9.021663   18.889168   44.288201   \n",
       "std      5.520111   64.046482  248.066192    4.559477    5.806625   16.317469   \n",
       "min     18.700000    1.100000    7.900000    0.000000    2.200000   15.000000   \n",
       "25%     90.200000   68.600000  437.700000    6.500000   15.500000   33.000000   \n",
       "50%     91.600000  108.300000  664.200000    8.400000   19.300000   42.000000   \n",
       "75%     92.900000  142.400000  713.900000   10.800000   22.800000   53.000000   \n",
       "max     96.200000  291.300000  860.600000   56.100000   33.300000  100.000000   \n",
       "\n",
       "             wind        rain         area      dayfri  ...    monthdec  \\\n",
       "count  517.000000  517.000000   517.000000  517.000000  ...  517.000000   \n",
       "mean     4.017602    0.021663    12.847292    0.164410  ...    0.017408   \n",
       "std      1.791653    0.295959    63.655818    0.371006  ...    0.130913   \n",
       "min      0.400000    0.000000     0.000000    0.000000  ...    0.000000   \n",
       "25%      2.700000    0.000000     0.000000    0.000000  ...    0.000000   \n",
       "50%      4.000000    0.000000     0.520000    0.000000  ...    0.000000   \n",
       "75%      4.900000    0.000000     6.570000    0.000000  ...    0.000000   \n",
       "max      9.400000    6.400000  1090.840000    1.000000  ...    1.000000   \n",
       "\n",
       "         monthfeb    monthjan    monthjul    monthjun    monthmar    monthmay  \\\n",
       "count  517.000000  517.000000  517.000000  517.000000  517.000000  517.000000   \n",
       "mean     0.038685    0.003868    0.061896    0.032882    0.104449    0.003868   \n",
       "std      0.193029    0.062137    0.241199    0.178500    0.306138    0.062137   \n",
       "min      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n",
       "25%      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n",
       "50%      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n",
       "75%      0.000000    0.000000    0.000000    0.000000    0.000000    0.000000   \n",
       "max      1.000000    1.000000    1.000000    1.000000    1.000000    1.000000   \n",
       "\n",
       "         monthnov    monthoct    monthsep  \n",
       "count  517.000000  517.000000  517.000000  \n",
       "mean     0.001934    0.029014    0.332689  \n",
       "std      0.043980    0.168007    0.471632  \n",
       "min      0.000000    0.000000    0.000000  \n",
       "25%      0.000000    0.000000    0.000000  \n",
       "50%      0.000000    0.000000    0.000000  \n",
       "75%      0.000000    0.000000    1.000000  \n",
       "max      1.000000    1.000000    1.000000  \n",
       "\n",
       "[8 rows x 28 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "forest.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a52468d3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:58:53.919034Z",
     "start_time": "2022-12-07T12:58:53.748044Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\pradeep kumar\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(forest['area'])\n",
    "plt.grid()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "53fd62f5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T12:59:42.146135Z",
     "start_time": "2022-12-07T12:59:41.979007Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([508.,   6.,   1.,   0.,   0.,   0.,   1.,   0.,   0.,   1.]),\n",
       " array([   0.   ,  109.084,  218.168,  327.252,  436.336,  545.42 ,\n",
       "         654.504,  763.588,  872.672,  981.756, 1090.84 ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(forest['area'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "73156fe7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:00:56.195521Z",
     "start_time": "2022-12-07T13:00:56.044734Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([378.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 139.]),\n",
       " array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(forest['size_category'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "84857654",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:02:40.659104Z",
     "start_time": "2022-12-07T13:02:39.394558Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,10))\n",
    "sns.barplot(data=forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f352472e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:05:59.149228Z",
     "start_time": "2022-12-07T13:05:58.877887Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,10))\n",
    "sns.kdeplot(forest['area'],shade=True,color='r')\n",
    "plt.xticks([i for i in range(0,1200,50)])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5ac0a51",
   "metadata": {},
   "source": [
    "Majority of the forest fires do not cover a large area, most of the damaged area is under 100 hectares of land"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e61668ca",
   "metadata": {},
   "source": [
    "Finding Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7955719e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:14:44.721630Z",
     "start_time": "2022-12-07T13:14:44.703578Z"
    }
   },
   "outputs": [],
   "source": [
    "correlation = forest[forest.columns[0:11]].corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ea635407",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:14:47.263581Z",
     "start_time": "2022-12-07T13:14:46.692183Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,10))\n",
    "sns.heatmap(correlation,annot=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f03d4d3a",
   "metadata": {},
   "source": [
    "# Neural Network Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6cefb373",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:17:40.132651Z",
     "start_time": "2022-12-07T13:17:40.077035Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>temp</th>\n",
       "      <th>RH</th>\n",
       "      <th>wind</th>\n",
       "      <th>rain</th>\n",
       "      <th>...</th>\n",
       "      <th>monthfeb</th>\n",
       "      <th>monthjan</th>\n",
       "      <th>monthjul</th>\n",
       "      <th>monthjun</th>\n",
       "      <th>monthmar</th>\n",
       "      <th>monthmay</th>\n",
       "      <th>monthnov</th>\n",
       "      <th>monthoct</th>\n",
       "      <th>monthsep</th>\n",
       "      <th>size_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mar</td>\n",
       "      <td>fri</td>\n",
       "      <td>86.2</td>\n",
       "      <td>26.2</td>\n",
       "      <td>94.3</td>\n",
       "      <td>5.1</td>\n",
       "      <td>8.2</td>\n",
       "      <td>51</td>\n",
       "      <td>6.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>oct</td>\n",
       "      <td>tue</td>\n",
       "      <td>90.6</td>\n",
       "      <td>35.4</td>\n",
       "      <td>669.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>18.0</td>\n",
       "      <td>33</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>oct</td>\n",
       "      <td>sat</td>\n",
       "      <td>90.6</td>\n",
       "      <td>43.7</td>\n",
       "      <td>686.9</td>\n",
       "      <td>6.7</td>\n",
       "      <td>14.6</td>\n",
       "      <td>33</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mar</td>\n",
       "      <td>fri</td>\n",
       "      <td>91.7</td>\n",
       "      <td>33.3</td>\n",
       "      <td>77.5</td>\n",
       "      <td>9.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>97</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>mar</td>\n",
       "      <td>sun</td>\n",
       "      <td>89.3</td>\n",
       "      <td>51.3</td>\n",
       "      <td>102.2</td>\n",
       "      <td>9.6</td>\n",
       "      <td>11.4</td>\n",
       "      <td>99</td>\n",
       "      <td>1.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>27.8</td>\n",
       "      <td>32</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>513</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>21.9</td>\n",
       "      <td>71</td>\n",
       "      <td>5.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>514</th>\n",
       "      <td>aug</td>\n",
       "      <td>sun</td>\n",
       "      <td>81.6</td>\n",
       "      <td>56.7</td>\n",
       "      <td>665.6</td>\n",
       "      <td>1.9</td>\n",
       "      <td>21.2</td>\n",
       "      <td>70</td>\n",
       "      <td>6.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>515</th>\n",
       "      <td>aug</td>\n",
       "      <td>sat</td>\n",
       "      <td>94.4</td>\n",
       "      <td>146.0</td>\n",
       "      <td>614.7</td>\n",
       "      <td>11.3</td>\n",
       "      <td>25.6</td>\n",
       "      <td>42</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516</th>\n",
       "      <td>nov</td>\n",
       "      <td>tue</td>\n",
       "      <td>79.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>106.7</td>\n",
       "      <td>1.1</td>\n",
       "      <td>11.8</td>\n",
       "      <td>31</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>517 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    month  day  FFMC    DMC     DC   ISI  temp  RH  wind  rain  ...  monthfeb  \\\n",
       "0     mar  fri  86.2   26.2   94.3   5.1   8.2  51   6.7   0.0  ...         0   \n",
       "1     oct  tue  90.6   35.4  669.1   6.7  18.0  33   0.9   0.0  ...         0   \n",
       "2     oct  sat  90.6   43.7  686.9   6.7  14.6  33   1.3   0.0  ...         0   \n",
       "3     mar  fri  91.7   33.3   77.5   9.0   8.3  97   4.0   0.2  ...         0   \n",
       "4     mar  sun  89.3   51.3  102.2   9.6  11.4  99   1.8   0.0  ...         0   \n",
       "..    ...  ...   ...    ...    ...   ...   ...  ..   ...   ...  ...       ...   \n",
       "512   aug  sun  81.6   56.7  665.6   1.9  27.8  32   2.7   0.0  ...         0   \n",
       "513   aug  sun  81.6   56.7  665.6   1.9  21.9  71   5.8   0.0  ...         0   \n",
       "514   aug  sun  81.6   56.7  665.6   1.9  21.2  70   6.7   0.0  ...         0   \n",
       "515   aug  sat  94.4  146.0  614.7  11.3  25.6  42   4.0   0.0  ...         0   \n",
       "516   nov  tue  79.5    3.0  106.7   1.1  11.8  31   4.5   0.0  ...         0   \n",
       "\n",
       "     monthjan  monthjul  monthjun  monthmar  monthmay  monthnov  monthoct  \\\n",
       "0           0         0         0         1         0         0         0   \n",
       "1           0         0         0         0         0         0         1   \n",
       "2           0         0         0         0         0         0         1   \n",
       "3           0         0         0         1         0         0         0   \n",
       "4           0         0         0         1         0         0         0   \n",
       "..        ...       ...       ...       ...       ...       ...       ...   \n",
       "512         0         0         0         0         0         0         0   \n",
       "513         0         0         0         0         0         0         0   \n",
       "514         0         0         0         0         0         0         0   \n",
       "515         0         0         0         0         0         0         0   \n",
       "516         0         0         0         0         0         1         0   \n",
       "\n",
       "     monthsep  size_category  \n",
       "0           0              0  \n",
       "1           0              0  \n",
       "2           0              0  \n",
       "3           0              0  \n",
       "4           0              0  \n",
       "..        ...            ...  \n",
       "512         0              1  \n",
       "513         0              1  \n",
       "514         0              1  \n",
       "515         0              0  \n",
       "516         0              0  \n",
       "\n",
       "[517 rows x 31 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mapping = {'small': 0, 'large': 1}\n",
    "data = forest.replace(mapping)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bf983ee3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:19:56.683403Z",
     "start_time": "2022-12-07T13:19:56.669935Z"
    }
   },
   "outputs": [],
   "source": [
    "data.drop([\"month\",\"day\"],axis=1,inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bdcbf527",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:21:14.137938Z",
     "start_time": "2022-12-07T13:21:14.121246Z"
    }
   },
   "outputs": [],
   "source": [
    "#splitting the data\n",
    "X = np.array(data.iloc[:,0:28])\n",
    "y = np.array(data.iloc[:,28])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c55f30ac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:30:23.575477Z",
     "start_time": "2022-12-07T13:30:23.561106Z"
    }
   },
   "outputs": [],
   "source": [
    "def norm_func(i):\n",
    "    x = (i-i.min())/(i.max()-i.min())\n",
    "    return (x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a507efd4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:30:48.512507Z",
     "start_time": "2022-12-07T13:30:48.504790Z"
    }
   },
   "outputs": [],
   "source": [
    "X_norm = norm_func(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5d7f82fa",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:31:10.870368Z",
     "start_time": "2022-12-07T13:31:10.849907Z"
    }
   },
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test= train_test_split(X_norm,y, test_size=0.2,stratify = y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2925452a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:10.686001Z",
     "start_time": "2022-12-07T13:33:10.592959Z"
    }
   },
   "outputs": [],
   "source": [
    "model = Sequential()\n",
    "model.add(Dense(12, input_dim=28, activation='relu'))\n",
    "model.add(Dense(8, activation='relu'))\n",
    "model.add(Dense(1, activation='sigmoid'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "3723cf18",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:10.733992Z",
     "start_time": "2022-12-07T13:33:10.690198Z"
    }
   },
   "outputs": [],
   "source": [
    "model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "36194851",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:29.862696Z",
     "start_time": "2022-12-07T13:33:10.737781Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/150\n",
      "28/28 [==============================] - 2s 17ms/step - loss: 0.6666 - accuracy: 0.7428 - val_loss: 0.6574 - val_accuracy: 0.7080\n",
      "Epoch 2/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.6390 - accuracy: 0.7428 - val_loss: 0.6370 - val_accuracy: 0.7080\n",
      "Epoch 3/150\n",
      "28/28 [==============================] - 0s 6ms/step - loss: 0.6166 - accuracy: 0.7428 - val_loss: 0.6224 - val_accuracy: 0.7080\n",
      "Epoch 4/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.6001 - accuracy: 0.7428 - val_loss: 0.6124 - val_accuracy: 0.7080\n",
      "Epoch 5/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.5877 - accuracy: 0.7428 - val_loss: 0.6078 - val_accuracy: 0.7080\n",
      "Epoch 6/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5809 - accuracy: 0.7428 - val_loss: 0.6059 - val_accuracy: 0.7080\n",
      "Epoch 7/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5778 - accuracy: 0.7428 - val_loss: 0.6058 - val_accuracy: 0.7080\n",
      "Epoch 8/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5749 - accuracy: 0.7428 - val_loss: 0.6047 - val_accuracy: 0.7080\n",
      "Epoch 9/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5734 - accuracy: 0.7428 - val_loss: 0.6024 - val_accuracy: 0.7080\n",
      "Epoch 10/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5721 - accuracy: 0.7428 - val_loss: 0.6013 - val_accuracy: 0.7080\n",
      "Epoch 11/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5707 - accuracy: 0.7428 - val_loss: 0.6015 - val_accuracy: 0.7080\n",
      "Epoch 12/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5695 - accuracy: 0.7428 - val_loss: 0.5998 - val_accuracy: 0.7080\n",
      "Epoch 13/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5684 - accuracy: 0.7428 - val_loss: 0.5989 - val_accuracy: 0.7080\n",
      "Epoch 14/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5681 - accuracy: 0.7428 - val_loss: 0.5968 - val_accuracy: 0.7080\n",
      "Epoch 15/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5667 - accuracy: 0.7428 - val_loss: 0.5960 - val_accuracy: 0.7080\n",
      "Epoch 16/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5646 - accuracy: 0.7428 - val_loss: 0.5938 - val_accuracy: 0.7080\n",
      "Epoch 17/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5639 - accuracy: 0.7464 - val_loss: 0.5924 - val_accuracy: 0.7080\n",
      "Epoch 18/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5620 - accuracy: 0.7464 - val_loss: 0.5919 - val_accuracy: 0.7080\n",
      "Epoch 19/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5589 - accuracy: 0.7464 - val_loss: 0.5867 - val_accuracy: 0.7080\n",
      "Epoch 20/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5574 - accuracy: 0.7464 - val_loss: 0.5857 - val_accuracy: 0.7080\n",
      "Epoch 21/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5562 - accuracy: 0.7464 - val_loss: 0.5860 - val_accuracy: 0.7080\n",
      "Epoch 22/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5530 - accuracy: 0.7464 - val_loss: 0.5804 - val_accuracy: 0.7080\n",
      "Epoch 23/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.5516 - accuracy: 0.7464 - val_loss: 0.5778 - val_accuracy: 0.7080\n",
      "Epoch 24/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5496 - accuracy: 0.7464 - val_loss: 0.5760 - val_accuracy: 0.7153\n",
      "Epoch 25/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.5495 - accuracy: 0.7464 - val_loss: 0.5737 - val_accuracy: 0.7153\n",
      "Epoch 26/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5448 - accuracy: 0.7464 - val_loss: 0.5719 - val_accuracy: 0.7153\n",
      "Epoch 27/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5433 - accuracy: 0.7464 - val_loss: 0.5697 - val_accuracy: 0.7153\n",
      "Epoch 28/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5405 - accuracy: 0.7500 - val_loss: 0.5654 - val_accuracy: 0.7299\n",
      "Epoch 29/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5397 - accuracy: 0.7536 - val_loss: 0.5624 - val_accuracy: 0.7372\n",
      "Epoch 30/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5362 - accuracy: 0.7536 - val_loss: 0.5620 - val_accuracy: 0.7372\n",
      "Epoch 31/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5332 - accuracy: 0.7536 - val_loss: 0.5571 - val_accuracy: 0.7372\n",
      "Epoch 32/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5337 - accuracy: 0.7536 - val_loss: 0.5552 - val_accuracy: 0.7445\n",
      "Epoch 33/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5296 - accuracy: 0.7536 - val_loss: 0.5510 - val_accuracy: 0.7445\n",
      "Epoch 34/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5291 - accuracy: 0.7536 - val_loss: 0.5480 - val_accuracy: 0.7445\n",
      "Epoch 35/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5234 - accuracy: 0.7536 - val_loss: 0.5464 - val_accuracy: 0.7445\n",
      "Epoch 36/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5209 - accuracy: 0.7536 - val_loss: 0.5445 - val_accuracy: 0.7445\n",
      "Epoch 37/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5183 - accuracy: 0.7536 - val_loss: 0.5396 - val_accuracy: 0.7445\n",
      "Epoch 38/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5153 - accuracy: 0.7536 - val_loss: 0.5377 - val_accuracy: 0.7445\n",
      "Epoch 39/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5136 - accuracy: 0.7645 - val_loss: 0.5334 - val_accuracy: 0.7445\n",
      "Epoch 40/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5122 - accuracy: 0.7645 - val_loss: 0.5291 - val_accuracy: 0.7445\n",
      "Epoch 41/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5067 - accuracy: 0.7645 - val_loss: 0.5286 - val_accuracy: 0.7445\n",
      "Epoch 42/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5035 - accuracy: 0.7717 - val_loss: 0.5231 - val_accuracy: 0.7445\n",
      "Epoch 43/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.5030 - accuracy: 0.7717 - val_loss: 0.5205 - val_accuracy: 0.7445\n",
      "Epoch 44/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4984 - accuracy: 0.7717 - val_loss: 0.5192 - val_accuracy: 0.7445\n",
      "Epoch 45/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4947 - accuracy: 0.7717 - val_loss: 0.5172 - val_accuracy: 0.7445\n",
      "Epoch 46/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4929 - accuracy: 0.7754 - val_loss: 0.5112 - val_accuracy: 0.7518\n",
      "Epoch 47/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4904 - accuracy: 0.7754 - val_loss: 0.5098 - val_accuracy: 0.7445\n",
      "Epoch 48/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4861 - accuracy: 0.7754 - val_loss: 0.5057 - val_accuracy: 0.7518\n",
      "Epoch 49/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4836 - accuracy: 0.7754 - val_loss: 0.5031 - val_accuracy: 0.7518\n",
      "Epoch 50/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4822 - accuracy: 0.7790 - val_loss: 0.5014 - val_accuracy: 0.7518\n",
      "Epoch 51/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4812 - accuracy: 0.7790 - val_loss: 0.4960 - val_accuracy: 0.7664\n",
      "Epoch 52/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4746 - accuracy: 0.7754 - val_loss: 0.4944 - val_accuracy: 0.7518\n",
      "Epoch 53/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4706 - accuracy: 0.7826 - val_loss: 0.4909 - val_accuracy: 0.7664\n",
      "Epoch 54/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4667 - accuracy: 0.7826 - val_loss: 0.4866 - val_accuracy: 0.7664\n",
      "Epoch 55/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4656 - accuracy: 0.7899 - val_loss: 0.4881 - val_accuracy: 0.7591\n",
      "Epoch 56/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4614 - accuracy: 0.7826 - val_loss: 0.4831 - val_accuracy: 0.7664\n",
      "Epoch 57/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4597 - accuracy: 0.7899 - val_loss: 0.4768 - val_accuracy: 0.7664\n",
      "Epoch 58/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4549 - accuracy: 0.7899 - val_loss: 0.4739 - val_accuracy: 0.7664\n",
      "Epoch 59/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4501 - accuracy: 0.7899 - val_loss: 0.4712 - val_accuracy: 0.7664\n",
      "Epoch 60/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4482 - accuracy: 0.8007 - val_loss: 0.4665 - val_accuracy: 0.7737\n",
      "Epoch 61/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4453 - accuracy: 0.7899 - val_loss: 0.4634 - val_accuracy: 0.7737\n",
      "Epoch 62/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4403 - accuracy: 0.7935 - val_loss: 0.4606 - val_accuracy: 0.7737\n",
      "Epoch 63/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4372 - accuracy: 0.8007 - val_loss: 0.4577 - val_accuracy: 0.7737\n",
      "Epoch 64/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4361 - accuracy: 0.8043 - val_loss: 0.4562 - val_accuracy: 0.7737\n",
      "Epoch 65/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4311 - accuracy: 0.7935 - val_loss: 0.4494 - val_accuracy: 0.7883\n",
      "Epoch 66/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4264 - accuracy: 0.8043 - val_loss: 0.4462 - val_accuracy: 0.7883\n",
      "Epoch 67/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4254 - accuracy: 0.8007 - val_loss: 0.4435 - val_accuracy: 0.7883\n",
      "Epoch 68/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4238 - accuracy: 0.8080 - val_loss: 0.4387 - val_accuracy: 0.8029\n",
      "Epoch 69/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4185 - accuracy: 0.8152 - val_loss: 0.4369 - val_accuracy: 0.7956\n",
      "Epoch 70/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4133 - accuracy: 0.8080 - val_loss: 0.4327 - val_accuracy: 0.7956\n",
      "Epoch 71/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4102 - accuracy: 0.8080 - val_loss: 0.4286 - val_accuracy: 0.8029\n",
      "Epoch 72/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4151 - accuracy: 0.8188 - val_loss: 0.4324 - val_accuracy: 0.7956\n",
      "Epoch 73/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4082 - accuracy: 0.8152 - val_loss: 0.4211 - val_accuracy: 0.8102\n",
      "Epoch 74/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.4079 - accuracy: 0.8152 - val_loss: 0.4178 - val_accuracy: 0.8102\n",
      "Epoch 75/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3986 - accuracy: 0.8261 - val_loss: 0.4133 - val_accuracy: 0.8102\n",
      "Epoch 76/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3935 - accuracy: 0.8188 - val_loss: 0.4110 - val_accuracy: 0.8102\n",
      "Epoch 77/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3903 - accuracy: 0.8225 - val_loss: 0.4066 - val_accuracy: 0.8102\n",
      "Epoch 78/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3860 - accuracy: 0.8225 - val_loss: 0.4047 - val_accuracy: 0.8102\n",
      "Epoch 79/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3825 - accuracy: 0.8261 - val_loss: 0.3991 - val_accuracy: 0.8102\n",
      "Epoch 80/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3816 - accuracy: 0.8297 - val_loss: 0.3960 - val_accuracy: 0.8102\n",
      "Epoch 81/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3765 - accuracy: 0.8333 - val_loss: 0.3924 - val_accuracy: 0.8102\n",
      "Epoch 82/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3751 - accuracy: 0.8297 - val_loss: 0.3892 - val_accuracy: 0.8102\n",
      "Epoch 83/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3713 - accuracy: 0.8261 - val_loss: 0.3859 - val_accuracy: 0.8248\n",
      "Epoch 84/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3663 - accuracy: 0.8514 - val_loss: 0.3864 - val_accuracy: 0.8102\n",
      "Epoch 85/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.3686 - accuracy: 0.8333 - val_loss: 0.3785 - val_accuracy: 0.8321\n",
      "Epoch 86/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3592 - accuracy: 0.8406 - val_loss: 0.3758 - val_accuracy: 0.8102\n",
      "Epoch 87/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3579 - accuracy: 0.8297 - val_loss: 0.3721 - val_accuracy: 0.8394\n",
      "Epoch 88/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3577 - accuracy: 0.8370 - val_loss: 0.3695 - val_accuracy: 0.8102\n",
      "Epoch 89/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3504 - accuracy: 0.8406 - val_loss: 0.3635 - val_accuracy: 0.8321\n",
      "Epoch 90/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3477 - accuracy: 0.8514 - val_loss: 0.3599 - val_accuracy: 0.8394\n",
      "Epoch 91/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3443 - accuracy: 0.8442 - val_loss: 0.3603 - val_accuracy: 0.8175\n",
      "Epoch 92/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3451 - accuracy: 0.8442 - val_loss: 0.3544 - val_accuracy: 0.8540\n",
      "Epoch 93/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3371 - accuracy: 0.8514 - val_loss: 0.3505 - val_accuracy: 0.8394\n",
      "Epoch 94/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3365 - accuracy: 0.8514 - val_loss: 0.3469 - val_accuracy: 0.8394\n",
      "Epoch 95/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3352 - accuracy: 0.8478 - val_loss: 0.3435 - val_accuracy: 0.8540\n",
      "Epoch 96/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3346 - accuracy: 0.8514 - val_loss: 0.3400 - val_accuracy: 0.8540\n",
      "Epoch 97/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3287 - accuracy: 0.8478 - val_loss: 0.3367 - val_accuracy: 0.8540\n",
      "Epoch 98/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3308 - accuracy: 0.8623 - val_loss: 0.3325 - val_accuracy: 0.8540\n",
      "Epoch 99/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3198 - accuracy: 0.8551 - val_loss: 0.3299 - val_accuracy: 0.8540\n",
      "Epoch 100/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3197 - accuracy: 0.8514 - val_loss: 0.3313 - val_accuracy: 0.8686\n",
      "Epoch 101/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3223 - accuracy: 0.8478 - val_loss: 0.3254 - val_accuracy: 0.8540\n",
      "Epoch 102/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3155 - accuracy: 0.8587 - val_loss: 0.3203 - val_accuracy: 0.8540\n",
      "Epoch 103/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3074 - accuracy: 0.8659 - val_loss: 0.3177 - val_accuracy: 0.8540\n",
      "Epoch 104/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.3035 - accuracy: 0.8623 - val_loss: 0.3146 - val_accuracy: 0.8540\n",
      "Epoch 105/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2997 - accuracy: 0.8659 - val_loss: 0.3119 - val_accuracy: 0.8540\n",
      "Epoch 106/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2951 - accuracy: 0.8551 - val_loss: 0.3069 - val_accuracy: 0.8540\n",
      "Epoch 107/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2933 - accuracy: 0.8768 - val_loss: 0.3116 - val_accuracy: 0.8540\n",
      "Epoch 108/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2920 - accuracy: 0.8623 - val_loss: 0.3000 - val_accuracy: 0.8540\n",
      "Epoch 109/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2850 - accuracy: 0.8587 - val_loss: 0.2977 - val_accuracy: 0.8686\n",
      "Epoch 110/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2888 - accuracy: 0.8732 - val_loss: 0.2914 - val_accuracy: 0.8686\n",
      "Epoch 111/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2810 - accuracy: 0.8659 - val_loss: 0.2883 - val_accuracy: 0.8540\n",
      "Epoch 112/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2764 - accuracy: 0.8587 - val_loss: 0.2851 - val_accuracy: 0.8686\n",
      "Epoch 113/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2802 - accuracy: 0.8986 - val_loss: 0.2796 - val_accuracy: 0.8613\n",
      "Epoch 114/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2706 - accuracy: 0.8696 - val_loss: 0.2760 - val_accuracy: 0.8686\n",
      "Epoch 115/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2696 - accuracy: 0.8732 - val_loss: 0.2754 - val_accuracy: 0.8832\n",
      "Epoch 116/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2710 - accuracy: 0.8696 - val_loss: 0.2727 - val_accuracy: 0.8978\n",
      "Epoch 117/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2639 - accuracy: 0.8913 - val_loss: 0.2793 - val_accuracy: 0.8540\n",
      "Epoch 118/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2624 - accuracy: 0.8768 - val_loss: 0.2682 - val_accuracy: 0.9051\n",
      "Epoch 119/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2610 - accuracy: 0.8841 - val_loss: 0.2627 - val_accuracy: 0.8759\n",
      "Epoch 120/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2587 - accuracy: 0.8841 - val_loss: 0.2599 - val_accuracy: 0.8759\n",
      "Epoch 121/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2519 - accuracy: 0.8913 - val_loss: 0.2564 - val_accuracy: 0.8832\n",
      "Epoch 122/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2514 - accuracy: 0.8732 - val_loss: 0.2537 - val_accuracy: 0.8832\n",
      "Epoch 123/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2487 - accuracy: 0.8986 - val_loss: 0.2572 - val_accuracy: 0.8613\n",
      "Epoch 124/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2457 - accuracy: 0.8804 - val_loss: 0.2464 - val_accuracy: 0.8832\n",
      "Epoch 125/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2399 - accuracy: 0.8913 - val_loss: 0.2434 - val_accuracy: 0.8978\n",
      "Epoch 126/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2382 - accuracy: 0.8986 - val_loss: 0.2435 - val_accuracy: 0.8832\n",
      "Epoch 127/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2439 - accuracy: 0.8804 - val_loss: 0.2383 - val_accuracy: 0.9051\n",
      "Epoch 128/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2321 - accuracy: 0.8949 - val_loss: 0.2364 - val_accuracy: 0.8832\n",
      "Epoch 129/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2305 - accuracy: 0.8949 - val_loss: 0.2323 - val_accuracy: 0.9051\n",
      "Epoch 130/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2306 - accuracy: 0.8949 - val_loss: 0.2308 - val_accuracy: 0.9051\n",
      "Epoch 131/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2305 - accuracy: 0.9022 - val_loss: 0.2279 - val_accuracy: 0.9051\n",
      "Epoch 132/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2233 - accuracy: 0.9094 - val_loss: 0.2252 - val_accuracy: 0.9051\n",
      "Epoch 133/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2189 - accuracy: 0.9058 - val_loss: 0.2218 - val_accuracy: 0.9051\n",
      "Epoch 134/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2177 - accuracy: 0.9058 - val_loss: 0.2215 - val_accuracy: 0.8832\n",
      "Epoch 135/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2184 - accuracy: 0.9130 - val_loss: 0.2153 - val_accuracy: 0.9051\n",
      "Epoch 136/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2127 - accuracy: 0.9022 - val_loss: 0.2193 - val_accuracy: 0.8832\n",
      "Epoch 137/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2154 - accuracy: 0.9094 - val_loss: 0.2154 - val_accuracy: 0.8832\n",
      "Epoch 138/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2171 - accuracy: 0.9094 - val_loss: 0.2124 - val_accuracy: 0.8978\n",
      "Epoch 139/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2079 - accuracy: 0.9130 - val_loss: 0.2072 - val_accuracy: 0.9051\n",
      "Epoch 140/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2041 - accuracy: 0.9167 - val_loss: 0.2089 - val_accuracy: 0.9197\n",
      "Epoch 141/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.2011 - accuracy: 0.9130 - val_loss: 0.2017 - val_accuracy: 0.9051\n",
      "Epoch 142/150\n",
      "28/28 [==============================] - 0s 5ms/step - loss: 0.2012 - accuracy: 0.9130 - val_loss: 0.1982 - val_accuracy: 0.9051\n",
      "Epoch 143/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1981 - accuracy: 0.9312 - val_loss: 0.1969 - val_accuracy: 0.9051\n",
      "Epoch 144/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1978 - accuracy: 0.9167 - val_loss: 0.1939 - val_accuracy: 0.9197\n",
      "Epoch 145/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1910 - accuracy: 0.9275 - val_loss: 0.1932 - val_accuracy: 0.9051\n",
      "Epoch 146/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1911 - accuracy: 0.9312 - val_loss: 0.1891 - val_accuracy: 0.9124\n",
      "Epoch 147/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1872 - accuracy: 0.9312 - val_loss: 0.1877 - val_accuracy: 0.9197\n",
      "Epoch 148/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1847 - accuracy: 0.9275 - val_loss: 0.1848 - val_accuracy: 0.9197\n",
      "Epoch 149/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1847 - accuracy: 0.9312 - val_loss: 0.1823 - val_accuracy: 0.9197\n",
      "Epoch 150/150\n",
      "28/28 [==============================] - 0s 4ms/step - loss: 0.1895 - accuracy: 0.9420 - val_loss: 0.1826 - val_accuracy: 0.9124\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x25d31b1fac0>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(x_train, y_train, epochs=150,validation_split=0.33, batch_size=10,callbacks=[history])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "1ceec6db",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:30.022148Z",
     "start_time": "2022-12-07T13:33:29.864548Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13/13 [==============================] - 0s 2ms/step - loss: 0.1806 - accuracy: 0.9128\n",
      "accuracy: 91.28%\n"
     ]
    }
   ],
   "source": [
    "scores = model.evaluate(x_train, y_train)\n",
    "print(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "8267f8f4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:30.036997Z",
     "start_time": "2022-12-07T13:33:30.025223Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys([])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.history.history.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "3078e4a1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:33:30.052712Z",
     "start_time": "2022-12-07T13:33:30.039883Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])\n"
     ]
    }
   ],
   "source": [
    "hist= print(history.history.keys())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4497780",
   "metadata": {},
   "source": [
    "summarize history for accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "ff08ced4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T13:59:04.096144Z",
     "start_time": "2022-12-07T13:59:03.851894Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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9V/4whfIysoafn7LLbeEXSsoKKC9vZ28vLwRr01JSeFzn/scycnJXHfddWRnZ1NdXc1FF1101usRERERkfEp4z0DLViwYPh7n8/HJz/5SZYuXUpubi6LFi0CoKmpKepri4qKSE4O/r6VmZlJV1fXlK5XRERERJTxHuFcMtFTIdpBNqFjv/nNb7j77rt56KGHWLRoEe3t7RQUFGCtjecyRURERKYNb2c/BZkpJCdNrxzz9FqNjFBWVsaxY8dGvd7Z2UlaWhpFRUX09PTw6U9/Oo6rExEREZl+PvzbF3nLrU8nehkjKPCe5j71qU/xla98hfz8fO64444R19/xjnewcOFC5s2bx5o1a1SrLSIiIue1IZ+fPafbWDs3N9FLGcGcLyUJW7dutc8///yI8crKSlavXp2AFU1/+mxERERkpjlQ28627z3Od9+yiRs2zYv7+xtjXrDWbo12TRlvEREREZk1dte0AbCloiCxC4lCgbeIiIiIzBovnmylODuN+QUZiV7KCAq8RURERGTW2F3TyuaK/Kid4RJNgbeIiIiIzArNXf2caO6ZlmUmoMBbRERERGaJF4fru/MTuo7RKPAWERERkVlhd00ryR7Dhvn5iV5KVAq8RURERGRWeLGmjdXluWSkJiV6KVEp8BYRERGRGc89OGe6lpmAAm8RERERmQWqGzrpGfCxZeH03FgJCrynvUWLFvHQQw+d0z1uu+02XvGKV8RoRSIiIiLTz3Q+OMelwFtEREREZrzpfHCOS4H3NHbzzTdTU1PD6173OrKzs/nmN7/J008/zSWXXEJ+fj4bN27k4YcfHp5/2223sWTJEnJycli8eDG//vWvqays5H3vex9PPfUU2dnZ5OfnJ+znEREREZkqu2ta2TJND85xKfCexn75y19SUVHBvffeS1dXF29729vYtm0bn/nMZ2hpaeHb3/42N954I16vl+7ubj784Q9z//3309nZyZNPPsmmTZtYvXo1P/zhD7n44ovp6uqira0t0T+WiIiISEwNH5wzjeu7AZITvYBp5/5PQv2+qX2POevh2v+Y9Mt+9atfcd1113HdddcBcPXVV7N161Z27drFTTfdhMfjYf/+/VRUVFBeXk55eXmsVy4iIiIy7bw4A+q7QRnvGeXkyZPcfvvt5OfnD389/vjj1NXVkZWVxe9//3t++MMfUl5ezrZt26iq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\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,8))\n",
    "plt.rcParams['font.size'] = 12\n",
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aef1eccc",
   "metadata": {},
   "source": [
    "summarize history for loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "07a5503a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T14:00:48.948601Z",
     "start_time": "2022-12-07T14:00:48.756861Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,8))\n",
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train', 'test'], loc='upper left')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4f88ebc",
   "metadata": {},
   "source": [
    "Predicting values from Model using same dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "29eec48c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T14:04:43.710970Z",
     "start_time": "2022-12-07T14:04:43.699872Z"
    }
   },
   "outputs": [],
   "source": [
    "def probToBinary(varProb):\n",
    "    if varProb >= 0.5:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "288513f8",
   "metadata": {},
   "source": [
    "generating predictions for test data & creating table with test price & predicted price for test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "47d74d9a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T14:08:34.542711Z",
     "start_time": "2022-12-07T14:08:34.238755Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4/4 [==============================] - 0s 3ms/step\n",
      "(104, 3)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Test_Actual</th>\n",
       "      <th>Test_Probability</th>\n",
       "      <th>Test_Predicted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.072832</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.999999</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.066926</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0.113551</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0.066209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>0.995574</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0.060394</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>0.045115</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>0.161506</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>0.083695</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Test_Actual  Test_Probability  Test_Predicted\n",
       "0            0          0.072832               0\n",
       "1            1          0.999999               1\n",
       "2            0          0.066926               0\n",
       "3            0          0.113551               0\n",
       "4            0          0.066209               0\n",
       "5            1          0.995574               1\n",
       "6            0          0.060394               0\n",
       "7            0          0.045115               0\n",
       "8            0          0.161506               0\n",
       "9            0          0.083695               0"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_predict_test = model.predict(x_test) \n",
    "test_prediction = pd.DataFrame()\n",
    "test_prediction['Test_Actual'] = y_test\n",
    "test_prediction['Test_Probability'] = y_predict_test\n",
    "test_prediction['Test_Predicted'] = test_prediction['Test_Probability'].apply(probToBinary)\n",
    "print(test_prediction.shape)\n",
    "test_prediction.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b76b46e",
   "metadata": {},
   "source": [
    "generating predictions for train data & creating table with test price & predicted price for test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "919a69dd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-12-07T14:09:31.667089Z",
     "start_time": "2022-12-07T14:09:31.489338Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13/13 [==============================] - 0s 2ms/step\n",
      "(413, 3)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Train_Actual</th>\n",
       "      <th>Train_Probability</th>\n",
       "      <th>Train_Predicted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.043018</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0.071175</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0.083521</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0.131814</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0.143645</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>0.133188</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>0.044384</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>0.556654</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>0.081830</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>0.900150</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Train_Actual  Train_Probability  Train_Predicted\n",
       "0             0           0.043018                0\n",
       "1             0           0.071175                0\n",
       "2             0           0.083521                0\n",
       "3             0           0.131814                0\n",
       "4             0           0.143645                0\n",
       "5             0           0.133188                0\n",
       "6             0           0.044384                0\n",
       "7             1           0.556654                1\n",
       "8             0           0.081830                0\n",
       "9             1           0.900150                1"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_predict_train = model.predict(x_train)\n",
    "train_prediction = pd.DataFrame()\n",
    "train_prediction['Train_Actual'] = y_train\n",
    "train_prediction['Train_Probability'] = y_predict_train\n",
    "train_prediction['Train_Predicted'] = train_prediction['Train_Probability'].apply(probToBinary)\n",
    "print(train_prediction.shape)\n",
    "train_prediction.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5369dba5",
   "metadata": {},
   "source": [
    "Predicting the probabilities of Forest Burned Area"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
